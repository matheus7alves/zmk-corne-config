/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC        &kp P  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I          &kp O    &kp P              &kp BSPC
&mt TILDE TAB  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K          &kp L    &kp SEMI           &kp SQT
&kp LSHFT      &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA      &kp DOT  &mt FSLH QUESTION  &kp RET
                             &kp LGUI  &mo 1  &kp SPACE    &kp LCTRL  &mo 2  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LC(UP_ARROW)  &kp LG(SPACE)      &kp LG(LC(DOWN_ARROW))    &kp TAB  &kp N7  &kp N8  &kp N9  &kp MINUS  &kp DEL
&kp CAPSLOCK  &kp LG(LA(UP_ARROW))  &kp LG(LA(RIGHT))     &kp K_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP           &none    &kp N4  &kp N5  &kp N6  &kp PLUS   &kp STAR
&kp LSHFT     &kp LC(N1)            &kp LC(N2)            &none             &kp COMMA          &kp DOT                   &trans   &kp N1  &kp N2  &kp N3  &kp EQUAL  &kp FSLH
                                                          &kp LGUI          &trans             &kp SPACE                 &kp RET  &trans  &kp N0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp EXCL  &kp AT  &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR           &kp BSPC
&none      &kp AT    &none   &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR      &none      &none     &kp UP           &kp LBKT   &kp RIGHT_BRACKET  &kp PIPE
&kp LSHFT  &none     &none   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &none      &kp LEFT  &kp DOWN         &kp RIGHT  &none              &none
                             &kp LGUI      &trans        &kp SPACE       &kp RET    &trans    &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
